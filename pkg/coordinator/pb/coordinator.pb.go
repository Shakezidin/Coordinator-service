// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: coordinator.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookingSearchCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment_Mode     string `protobuf:"bytes,1,opt,name=Payment_Mode,json=PaymentMode,proto3" json:"Payment_Mode,omitempty"`
	Booking_Status   string `protobuf:"bytes,2,opt,name=Booking_Status,json=BookingStatus,proto3" json:"Booking_Status,omitempty"`
	Cancelled_Status bool   `protobuf:"varint,3,opt,name=Cancelled_Status,json=CancelledStatus,proto3" json:"Cancelled_Status,omitempty"`
	User_Email       string `protobuf:"bytes,4,opt,name=User_Email,json=UserEmail,proto3" json:"User_Email,omitempty"`
	Booking_ID       string `protobuf:"bytes,5,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
	Book_Date        string `protobuf:"bytes,6,opt,name=Book_Date,json=BookDate,proto3" json:"Book_Date,omitempty"`
	Start_Date       string `protobuf:"bytes,7,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Coordinator_ID   uint32 `protobuf:"varint,8,opt,name=Coordinator_ID,json=CoordinatorID,proto3" json:"Coordinator_ID,omitempty"`
	Page             int64  `protobuf:"varint,9,opt,name=Page,proto3" json:"Page,omitempty"`
	Category_ID      int64  `protobuf:"varint,10,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
}

func (x *BookingSearchCriteria) Reset() {
	*x = BookingSearchCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingSearchCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingSearchCriteria) ProtoMessage() {}

func (x *BookingSearchCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingSearchCriteria.ProtoReflect.Descriptor instead.
func (*BookingSearchCriteria) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

func (x *BookingSearchCriteria) GetPayment_Mode() string {
	if x != nil {
		return x.Payment_Mode
	}
	return ""
}

func (x *BookingSearchCriteria) GetBooking_Status() string {
	if x != nil {
		return x.Booking_Status
	}
	return ""
}

func (x *BookingSearchCriteria) GetCancelled_Status() bool {
	if x != nil {
		return x.Cancelled_Status
	}
	return false
}

func (x *BookingSearchCriteria) GetUser_Email() string {
	if x != nil {
		return x.User_Email
	}
	return ""
}

func (x *BookingSearchCriteria) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

func (x *BookingSearchCriteria) GetBook_Date() string {
	if x != nil {
		return x.Book_Date
	}
	return ""
}

func (x *BookingSearchCriteria) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *BookingSearchCriteria) GetCoordinator_ID() uint32 {
	if x != nil {
		return x.Coordinator_ID
	}
	return 0
}

func (x *BookingSearchCriteria) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *BookingSearchCriteria) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone    string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,6,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type Dashboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet            int64 `protobuf:"varint,1,opt,name=Wallet,proto3" json:"Wallet,omitempty"`
	Today             int64 `protobuf:"varint,2,opt,name=Today,proto3" json:"Today,omitempty"`
	Monthly           int64 `protobuf:"varint,3,opt,name=Monthly,proto3" json:"Monthly,omitempty"`
	Coordinator_Count int64 `protobuf:"varint,4,opt,name=Coordinator_Count,json=CoordinatorCount,proto3" json:"Coordinator_Count,omitempty"`
	Users_Count       int64 `protobuf:"varint,5,opt,name=Users_Count,json=UsersCount,proto3" json:"Users_Count,omitempty"`
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *Dashboard) GetWallet() int64 {
	if x != nil {
		return x.Wallet
	}
	return 0
}

func (x *Dashboard) GetToday() int64 {
	if x != nil {
		return x.Today
	}
	return 0
}

func (x *Dashboard) GetMonthly() int64 {
	if x != nil {
		return x.Monthly
	}
	return 0
}

func (x *Dashboard) GetCoordinator_Count() int64 {
	if x != nil {
		return x.Coordinator_Count
	}
	return 0
}

func (x *Dashboard) GetUsers_Count() int64 {
	if x != nil {
		return x.Users_Count
	}
	return 0
}

type Histories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histories []*History `protobuf:"bytes,1,rep,name=Histories,proto3" json:"Histories,omitempty"`
}

func (x *Histories) Reset() {
	*x = Histories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Histories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Histories) ProtoMessage() {}

func (x *Histories) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Histories.ProtoReflect.Descriptor instead.
func (*Histories) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *Histories) GetHistories() []*History {
	if x != nil {
		return x.Histories
	}
	return nil
}

type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Payment_Mode     string              `protobuf:"bytes,2,opt,name=Payment_Mode,json=PaymentMode,proto3" json:"Payment_Mode,omitempty"`
	Booking_Status   string              `protobuf:"bytes,3,opt,name=Booking_Status,json=BookingStatus,proto3" json:"Booking_Status,omitempty"`
	Cancelled_Status string              `protobuf:"bytes,4,opt,name=Cancelled_Status,json=CancelledStatus,proto3" json:"Cancelled_Status,omitempty"`
	Total_Price      int64               `protobuf:"varint,5,opt,name=Total_Price,json=TotalPrice,proto3" json:"Total_Price,omitempty"`
	User_ID          int64               `protobuf:"varint,6,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Booking_ID       string              `protobuf:"bytes,7,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
	Book_Date        string              `protobuf:"bytes,8,opt,name=Book_Date,json=BookDate,proto3" json:"Book_Date,omitempty"`
	Start_Date       string              `protobuf:"bytes,9,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Travellers       []*TravellerDetails `protobuf:"bytes,10,rep,name=Travellers,proto3" json:"Travellers,omitempty"`
	Paid_Amount      int64               `protobuf:"varint,11,opt,name=Paid_Amount,json=PaidAmount,proto3" json:"Paid_Amount,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{5}
}

func (x *History) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *History) GetPayment_Mode() string {
	if x != nil {
		return x.Payment_Mode
	}
	return ""
}

func (x *History) GetBooking_Status() string {
	if x != nil {
		return x.Booking_Status
	}
	return ""
}

func (x *History) GetCancelled_Status() string {
	if x != nil {
		return x.Cancelled_Status
	}
	return ""
}

func (x *History) GetTotal_Price() int64 {
	if x != nil {
		return x.Total_Price
	}
	return 0
}

func (x *History) GetUser_ID() int64 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *History) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

func (x *History) GetBook_Date() string {
	if x != nil {
		return x.Book_Date
	}
	return ""
}

func (x *History) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *History) GetTravellers() []*TravellerDetails {
	if x != nil {
		return x.Travellers
	}
	return nil
}

func (x *History) GetPaid_Amount() int64 {
	if x != nil {
		return x.Paid_Amount
	}
	return 0
}

type PaymentConfirmedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email        string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Reference_ID string `protobuf:"bytes,2,opt,name=Reference_ID,json=ReferenceID,proto3" json:"Reference_ID,omitempty"`
	Payment_ID   string `protobuf:"bytes,3,opt,name=Payment_ID,json=PaymentID,proto3" json:"Payment_ID,omitempty"`
	User_ID      string `protobuf:"bytes,4,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Order_ID     string `protobuf:"bytes,5,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
	Signature    string `protobuf:"bytes,6,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Total        string `protobuf:"bytes,7,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *PaymentConfirmedRequest) Reset() {
	*x = PaymentConfirmedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentConfirmedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentConfirmedRequest) ProtoMessage() {}

func (x *PaymentConfirmedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentConfirmedRequest.ProtoReflect.Descriptor instead.
func (*PaymentConfirmedRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentConfirmedRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PaymentConfirmedRequest) GetReference_ID() string {
	if x != nil {
		return x.Reference_ID
	}
	return ""
}

func (x *PaymentConfirmedRequest) GetPayment_ID() string {
	if x != nil {
		return x.Payment_ID
	}
	return ""
}

func (x *PaymentConfirmedRequest) GetUser_ID() string {
	if x != nil {
		return x.User_ID
	}
	return ""
}

func (x *PaymentConfirmedRequest) GetOrder_ID() string {
	if x != nil {
		return x.Order_ID
	}
	return ""
}

func (x *PaymentConfirmedRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *PaymentConfirmedRequest) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Departure_Time string `protobuf:"bytes,2,opt,name=Departure_Time,json=DepartureTime,proto3" json:"Departure_Time,omitempty"`
	Min_Price      int64  `protobuf:"varint,3,opt,name=Min_Price,json=MinPrice,proto3" json:"Min_Price,omitempty"`
	Max_Price      int64  `protobuf:"varint,4,opt,name=Max_Price,json=MaxPrice,proto3" json:"Max_Price,omitempty"`
	Category_ID    int64  `protobuf:"varint,5,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Order_By       string `protobuf:"bytes,6,opt,name=Order_By,json=OrderBy,proto3" json:"Order_By,omitempty"`
	Status         bool   `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{7}
}

func (x *Filter) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Filter) GetDeparture_Time() string {
	if x != nil {
		return x.Departure_Time
	}
	return ""
}

func (x *Filter) GetMin_Price() int64 {
	if x != nil {
		return x.Min_Price
	}
	return 0
}

func (x *Filter) GetMax_Price() int64 {
	if x != nil {
		return x.Max_Price
	}
	return 0
}

func (x *Filter) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *Filter) GetOrder_By() string {
	if x != nil {
		return x.Order_By
	}
	return ""
}

func (x *Filter) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type OnlinePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User_ID           int32   `protobuf:"varint,1,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Total_Fare        float32 `protobuf:"fixed32,2,opt,name=Total_Fare,json=TotalFare,proto3" json:"Total_Fare,omitempty"`
	Booking_Reference string  `protobuf:"bytes,3,opt,name=Booking_Reference,json=BookingReference,proto3" json:"Booking_Reference,omitempty"`
	Email             string  `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	Order_ID          string  `protobuf:"bytes,5,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
}

func (x *OnlinePaymentResponse) Reset() {
	*x = OnlinePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePaymentResponse) ProtoMessage() {}

func (x *OnlinePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePaymentResponse.ProtoReflect.Descriptor instead.
func (*OnlinePaymentResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{8}
}

func (x *OnlinePaymentResponse) GetUser_ID() int32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *OnlinePaymentResponse) GetTotal_Fare() float32 {
	if x != nil {
		return x.Total_Fare
	}
	return 0
}

func (x *OnlinePaymentResponse) GetBooking_Reference() string {
	if x != nil {
		return x.Booking_Reference
	}
	return ""
}

func (x *OnlinePaymentResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OnlinePaymentResponse) GetOrder_ID() string {
	if x != nil {
		return x.Order_ID
	}
	return ""
}

type BookingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Booking_ID string `protobuf:"bytes,2,opt,name=Booking_ID,json=BookingID,proto3" json:"Booking_ID,omitempty"`
}

func (x *BookingResponse) Reset() {
	*x = BookingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingResponse) ProtoMessage() {}

func (x *BookingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingResponse.ProtoReflect.Descriptor instead.
func (*BookingResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{9}
}

func (x *BookingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BookingResponse) GetBooking_ID() string {
	if x != nil {
		return x.Booking_ID
	}
	return ""
}

type Booking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref_ID  string `protobuf:"bytes,1,opt,name=Ref_ID,json=RefID,proto3" json:"Ref_ID,omitempty"`
	User_ID int64  `protobuf:"varint,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Typ     string `protobuf:"bytes,3,opt,name=Typ,proto3" json:"Typ,omitempty"`
}

func (x *Booking) Reset() {
	*x = Booking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Booking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Booking) ProtoMessage() {}

func (x *Booking) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Booking.ProtoReflect.Descriptor instead.
func (*Booking) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{10}
}

func (x *Booking) GetRef_ID() string {
	if x != nil {
		return x.Ref_ID
	}
	return ""
}

func (x *Booking) GetUser_ID() int64 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *Booking) GetTyp() string {
	if x != nil {
		return x.Typ
	}
	return ""
}

type TravellerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status               string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Package_Price        int64  `protobuf:"varint,2,opt,name=Package_Price,json=PackagePrice,proto3" json:"Package_Price,omitempty"`
	Activity_Total_Price int64  `protobuf:"varint,3,opt,name=Activity_Total_Price,json=ActivityTotalPrice,proto3" json:"Activity_Total_Price,omitempty"`
	Total_Price          int64  `protobuf:"varint,4,opt,name=Total_Price,json=TotalPrice,proto3" json:"Total_Price,omitempty"`
	Advance_Amount       int64  `protobuf:"varint,5,opt,name=Advance_Amount,json=AdvanceAmount,proto3" json:"Advance_Amount,omitempty"`
	Ref_ID               string `protobuf:"bytes,6,opt,name=Ref_ID,json=RefID,proto3" json:"Ref_ID,omitempty"`
}

func (x *TravellerResponse) Reset() {
	*x = TravellerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TravellerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TravellerResponse) ProtoMessage() {}

func (x *TravellerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TravellerResponse.ProtoReflect.Descriptor instead.
func (*TravellerResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{11}
}

func (x *TravellerResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TravellerResponse) GetPackage_Price() int64 {
	if x != nil {
		return x.Package_Price
	}
	return 0
}

func (x *TravellerResponse) GetActivity_Total_Price() int64 {
	if x != nil {
		return x.Activity_Total_Price
	}
	return 0
}

func (x *TravellerResponse) GetTotal_Price() int64 {
	if x != nil {
		return x.Total_Price
	}
	return 0
}

func (x *TravellerResponse) GetAdvance_Amount() int64 {
	if x != nil {
		return x.Advance_Amount
	}
	return 0
}

func (x *TravellerResponse) GetRef_ID() string {
	if x != nil {
		return x.Ref_ID
	}
	return ""
}

type TravellerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string      `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Age         string      `protobuf:"bytes,2,opt,name=Age,proto3" json:"Age,omitempty"`
	Gender      string      `protobuf:"bytes,3,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Activity_ID []string    `protobuf:"bytes,4,rep,name=Activity_ID,json=ActivityID,proto3" json:"Activity_ID,omitempty"`
	ID          int64       `protobuf:"varint,5,opt,name=ID,proto3" json:"ID,omitempty"`
	Activity    []*Activity `protobuf:"bytes,6,rep,name=Activity,proto3" json:"Activity,omitempty"`
}

func (x *TravellerDetails) Reset() {
	*x = TravellerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TravellerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TravellerDetails) ProtoMessage() {}

func (x *TravellerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TravellerDetails.ProtoReflect.Descriptor instead.
func (*TravellerDetails) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{12}
}

func (x *TravellerDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TravellerDetails) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *TravellerDetails) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *TravellerDetails) GetActivity_ID() []string {
	if x != nil {
		return x.Activity_ID
	}
	return nil
}

func (x *TravellerDetails) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TravellerDetails) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type TravellerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traveller_Details []*TravellerDetails `protobuf:"bytes,1,rep,name=Traveller_Details,json=TravellerDetails,proto3" json:"Traveller_Details,omitempty"`
	User_ID           string              `protobuf:"bytes,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Package_ID        string              `protobuf:"bytes,3,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Email             string              `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	Username          string              `protobuf:"bytes,5,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *TravellerRequest) Reset() {
	*x = TravellerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TravellerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TravellerRequest) ProtoMessage() {}

func (x *TravellerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TravellerRequest.ProtoReflect.Descriptor instead.
func (*TravellerRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{13}
}

func (x *TravellerRequest) GetTraveller_Details() []*TravellerDetails {
	if x != nil {
		return x.Traveller_Details
	}
	return nil
}

func (x *TravellerRequest) GetUser_ID() string {
	if x != nil {
		return x.User_ID
	}
	return ""
}

func (x *TravellerRequest) GetPackage_ID() string {
	if x != nil {
		return x.Package_ID
	}
	return ""
}

func (x *TravellerRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TravellerRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type Search struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category_ID       int64    `protobuf:"varint,1,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Traveler_Count    int64    `protobuf:"varint,2,opt,name=Traveler_Count,json=TravelerCount,proto3" json:"Traveler_Count,omitempty"`
	Pickup_Place      string   `protobuf:"bytes,3,opt,name=Pickup_Place,json=PickupPlace,proto3" json:"Pickup_Place,omitempty"`
	Final_Destination string   `protobuf:"bytes,4,opt,name=Final_Destination,json=FinalDestination,proto3" json:"Final_Destination,omitempty"`
	Date              string   `protobuf:"bytes,5,opt,name=Date,proto3" json:"Date,omitempty"`
	Page              int64    `protobuf:"varint,6,opt,name=Page,proto3" json:"Page,omitempty"`
	End_Date          string   `protobuf:"bytes,7,opt,name=End_Date,json=EndDate,proto3" json:"End_Date,omitempty"`
	Max_Destination   int64    `protobuf:"varint,8,opt,name=Max_Destination,json=MaxDestination,proto3" json:"Max_Destination,omitempty"`
	Destination       []string `protobuf:"bytes,9,rep,name=Destination,proto3" json:"Destination,omitempty"`
}

func (x *Search) Reset() {
	*x = Search{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Search) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Search) ProtoMessage() {}

func (x *Search) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Search.ProtoReflect.Descriptor instead.
func (*Search) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{14}
}

func (x *Search) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *Search) GetTraveler_Count() int64 {
	if x != nil {
		return x.Traveler_Count
	}
	return 0
}

func (x *Search) GetPickup_Place() string {
	if x != nil {
		return x.Pickup_Place
	}
	return ""
}

func (x *Search) GetFinal_Destination() string {
	if x != nil {
		return x.Final_Destination
	}
	return ""
}

func (x *Search) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Search) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Search) GetEnd_Date() string {
	if x != nil {
		return x.End_Date
	}
	return ""
}

func (x *Search) GetMax_Destination() int64 {
	if x != nil {
		return x.Max_Destination
	}
	return 0
}

func (x *Search) GetDestination() []string {
	if x != nil {
		return x.Destination
	}
	return nil
}

type Categories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*Category `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *Categories) Reset() {
	*x = Categories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Categories) ProtoMessage() {}

func (x *Categories) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Categories.ProtoReflect.Descriptor instead.
func (*Categories) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{15}
}

func (x *Categories) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type PackagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages []*Package `protobuf:"bytes,1,rep,name=Packages,proto3" json:"Packages,omitempty"`
}

func (x *PackagesResponse) Reset() {
	*x = PackagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PackagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackagesResponse) ProtoMessage() {}

func (x *PackagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackagesResponse.ProtoReflect.Descriptor instead.
func (*PackagesResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{16}
}

func (x *PackagesResponse) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

type Verify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OTP   int32  `protobuf:"varint,1,opt,name=OTP,proto3" json:"OTP,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *Verify) Reset() {
	*x = Verify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verify) ProtoMessage() {}

func (x *Verify) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verify.ProtoReflect.Descriptor instead.
func (*Verify) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{17}
}

func (x *Verify) GetOTP() int32 {
	if x != nil {
		return x.OTP
	}
	return 0
}

func (x *Verify) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ID      int64  `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
	Amount  int64  `protobuf:"varint,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{18}
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Response) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Signup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone    string `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,5,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *Signup) Reset() {
	*x = Signup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signup) ProtoMessage() {}

func (x *Signup) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signup.ProtoReflect.Descriptor instead.
func (*Signup) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{19}
}

func (x *Signup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Signup) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Signup) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Signup) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Signup) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type NewPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	New_Password string `protobuf:"bytes,1,opt,name=New_Password,json=NewPassword,proto3" json:"New_Password,omitempty"`
	ID           string `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *NewPassword) Reset() {
	*x = NewPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPassword) ProtoMessage() {}

func (x *NewPassword) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPassword.ProtoReflect.Descriptor instead.
func (*NewPassword) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{20}
}

func (x *NewPassword) GetNew_Password() string {
	if x != nil {
		return x.New_Password
	}
	return ""
}

func (x *NewPassword) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ForgetPasswordVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OTP   string `protobuf:"bytes,1,opt,name=OTP,proto3" json:"OTP,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=Phone,proto3" json:"Phone,omitempty"`
}

func (x *ForgetPasswordVerify) Reset() {
	*x = ForgetPasswordVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordVerify) ProtoMessage() {}

func (x *ForgetPasswordVerify) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordVerify.ProtoReflect.Descriptor instead.
func (*ForgetPasswordVerify) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{21}
}

func (x *ForgetPasswordVerify) GetOTP() string {
	if x != nil {
		return x.OTP
	}
	return ""
}

func (x *ForgetPasswordVerify) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ForgetPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=Phone,proto3" json:"Phone,omitempty"`
}

func (x *ForgetPassword) Reset() {
	*x = ForgetPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPassword) ProtoMessage() {}

func (x *ForgetPassword) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPassword.ProtoReflect.Descriptor instead.
func (*ForgetPassword) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{22}
}

func (x *ForgetPassword) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Page   int64  `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{23}
}

func (x *View) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *View) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *View) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type Login struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Role     string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`
}

func (x *Login) Reset() {
	*x = Login{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login) ProtoMessage() {}

func (x *Login) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login.ProtoReflect.Descriptor instead.
func (*Login) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{24}
}

func (x *Login) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Login) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Login) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type SignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *SignupResponse) Reset() {
	*x = SignupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupResponse) ProtoMessage() {}

func (x *SignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupResponse.ProtoReflect.Descriptor instead.
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{25}
}

func (x *SignupResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SignupResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity_ID    int64  `protobuf:"varint,1,opt,name=Activity_ID,json=ActivityID,proto3" json:"Activity_ID,omitempty"`
	Activity_Name  string `protobuf:"bytes,2,opt,name=Activity_Name,json=ActivityName,proto3" json:"Activity_Name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Location       string `protobuf:"bytes,4,opt,name=Location,proto3" json:"Location,omitempty"`
	Activity_Type  string `protobuf:"bytes,5,opt,name=Activity_Type,json=ActivityType,proto3" json:"Activity_Type,omitempty"`
	Amount         int64  `protobuf:"varint,6,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Date           string `protobuf:"bytes,7,opt,name=Date,proto3" json:"Date,omitempty"`
	Time           string `protobuf:"bytes,8,opt,name=Time,proto3" json:"Time,omitempty"`
	Destination_ID int64  `protobuf:"varint,9,opt,name=Destination_ID,json=DestinationID,proto3" json:"Destination_ID,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{26}
}

func (x *Activity) GetActivity_ID() int64 {
	if x != nil {
		return x.Activity_ID
	}
	return 0
}

func (x *Activity) GetActivity_Name() string {
	if x != nil {
		return x.Activity_Name
	}
	return ""
}

func (x *Activity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Activity) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Activity) GetActivity_Type() string {
	if x != nil {
		return x.Activity_Type
	}
	return ""
}

func (x *Activity) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Activity) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Activity) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Activity) GetDestination_ID() int64 {
	if x != nil {
		return x.Destination_ID
	}
	return 0
}

type FoodMenus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Food_Menu []*FoodMenu `protobuf:"bytes,1,rep,name=Food_Menu,json=FoodMenu,proto3" json:"Food_Menu,omitempty"`
}

func (x *FoodMenus) Reset() {
	*x = FoodMenus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodMenus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodMenus) ProtoMessage() {}

func (x *FoodMenus) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodMenus.ProtoReflect.Descriptor instead.
func (*FoodMenus) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{27}
}

func (x *FoodMenus) GetFood_Menu() []*FoodMenu {
	if x != nil {
		return x.Food_Menu
	}
	return nil
}

type FoodMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Food_Menu_ID int64  `protobuf:"varint,1,opt,name=Food_Menu_ID,json=FoodMenuID,proto3" json:"Food_Menu_ID,omitempty"`
	Package_ID   int64  `protobuf:"varint,2,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Breakfast    string `protobuf:"bytes,3,opt,name=Breakfast,proto3" json:"Breakfast,omitempty"`
	Lunch        string `protobuf:"bytes,4,opt,name=Lunch,proto3" json:"Lunch,omitempty"`
	Dinner       string `protobuf:"bytes,5,opt,name=Dinner,proto3" json:"Dinner,omitempty"`
	Date         string `protobuf:"bytes,6,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *FoodMenu) Reset() {
	*x = FoodMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodMenu) ProtoMessage() {}

func (x *FoodMenu) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodMenu.ProtoReflect.Descriptor instead.
func (*FoodMenu) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{28}
}

func (x *FoodMenu) GetFood_Menu_ID() int64 {
	if x != nil {
		return x.Food_Menu_ID
	}
	return 0
}

func (x *FoodMenu) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *FoodMenu) GetBreakfast() string {
	if x != nil {
		return x.Breakfast
	}
	return ""
}

func (x *FoodMenu) GetLunch() string {
	if x != nil {
		return x.Lunch
	}
	return ""
}

func (x *FoodMenu) GetDinner() string {
	if x != nil {
		return x.Dinner
	}
	return ""
}

func (x *FoodMenu) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type Destination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination_ID      int64       `protobuf:"varint,1,opt,name=Destination_ID,json=DestinationID,proto3" json:"Destination_ID,omitempty"`
	Destination_Name    string      `protobuf:"bytes,2,opt,name=Destination_Name,json=DestinationName,proto3" json:"Destination_Name,omitempty"`
	Description         string      `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Min_Price           int64       `protobuf:"varint,4,opt,name=Min_Price,json=MinPrice,proto3" json:"Min_Price,omitempty"`
	Max_Capacity        int64       `protobuf:"varint,5,opt,name=Max_Capacity,json=MaxCapacity,proto3" json:"Max_Capacity,omitempty"`
	Image               string      `protobuf:"bytes,6,opt,name=Image,proto3" json:"Image,omitempty"`
	Activity            []*Activity `protobuf:"bytes,7,rep,name=Activity,proto3" json:"Activity,omitempty"`
	Package_ID          int64       `protobuf:"varint,8,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Transportation_Mode string      `protobuf:"bytes,9,opt,name=Transportation_Mode,json=TransportationMode,proto3" json:"Transportation_Mode,omitempty"`
	Arrival_Location    string      `protobuf:"bytes,10,opt,name=Arrival_Location,json=ArrivalLocation,proto3" json:"Arrival_Location,omitempty"`
}

func (x *Destination) Reset() {
	*x = Destination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Destination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Destination) ProtoMessage() {}

func (x *Destination) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Destination.ProtoReflect.Descriptor instead.
func (*Destination) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{29}
}

func (x *Destination) GetDestination_ID() int64 {
	if x != nil {
		return x.Destination_ID
	}
	return 0
}

func (x *Destination) GetDestination_Name() string {
	if x != nil {
		return x.Destination_Name
	}
	return ""
}

func (x *Destination) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Destination) GetMin_Price() int64 {
	if x != nil {
		return x.Min_Price
	}
	return 0
}

func (x *Destination) GetMax_Capacity() int64 {
	if x != nil {
		return x.Max_Capacity
	}
	return 0
}

func (x *Destination) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Destination) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *Destination) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *Destination) GetTransportation_Mode() string {
	if x != nil {
		return x.Transportation_Mode
	}
	return ""
}

func (x *Destination) GetArrival_Location() string {
	if x != nil {
		return x.Arrival_Location
	}
	return ""
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package_ID        int64          `protobuf:"varint,1,opt,name=Package_ID,json=PackageID,proto3" json:"Package_ID,omitempty"`
	Package_Name      string         `protobuf:"bytes,2,opt,name=Package_Name,json=PackageName,proto3" json:"Package_Name,omitempty"`
	Coorinator_ID     int64          `protobuf:"varint,3,opt,name=Coorinator_ID,json=CoorinatorID,proto3" json:"Coorinator_ID,omitempty"`
	Start_Location    string         `protobuf:"bytes,4,opt,name=Start_Location,json=StartLocation,proto3" json:"Start_Location,omitempty"`
	Available_Space   int64          `protobuf:"varint,5,opt,name=Available_Space,json=AvailableSpace,proto3" json:"Available_Space,omitempty"`
	Start_Date        string         `protobuf:"bytes,6,opt,name=Start_Date,json=StartDate,proto3" json:"Start_Date,omitempty"`
	Start_Time        string         `protobuf:"bytes,7,opt,name=Start_Time,json=StartTime,proto3" json:"Start_Time,omitempty"`
	End_Date          string         `protobuf:"bytes,8,opt,name=End_Date,json=EndDate,proto3" json:"End_Date,omitempty"`
	Price             int64          `protobuf:"varint,9,opt,name=Price,proto3" json:"Price,omitempty"`
	Image             string         `protobuf:"bytes,10,opt,name=Image,proto3" json:"Image,omitempty"`
	Destination_Count int64          `protobuf:"varint,11,opt,name=Destination_Count,json=DestinationCount,proto3" json:"Destination_Count,omitempty"`
	Destination       string         `protobuf:"bytes,12,opt,name=Destination,proto3" json:"Destination,omitempty"`
	Description       string         `protobuf:"bytes,13,opt,name=Description,proto3" json:"Description,omitempty"`
	Max_Capacity      int64          `protobuf:"varint,14,opt,name=Max_Capacity,json=MaxCapacity,proto3" json:"Max_Capacity,omitempty"`
	Category_ID       int64          `protobuf:"varint,15,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Category          *Category      `protobuf:"bytes,16,opt,name=Category,proto3" json:"Category,omitempty"`
	Destinations      []*Destination `protobuf:"bytes,17,rep,name=Destinations,proto3" json:"Destinations,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{30}
}

func (x *Package) GetPackage_ID() int64 {
	if x != nil {
		return x.Package_ID
	}
	return 0
}

func (x *Package) GetPackage_Name() string {
	if x != nil {
		return x.Package_Name
	}
	return ""
}

func (x *Package) GetCoorinator_ID() int64 {
	if x != nil {
		return x.Coorinator_ID
	}
	return 0
}

func (x *Package) GetStart_Location() string {
	if x != nil {
		return x.Start_Location
	}
	return ""
}

func (x *Package) GetAvailable_Space() int64 {
	if x != nil {
		return x.Available_Space
	}
	return 0
}

func (x *Package) GetStart_Date() string {
	if x != nil {
		return x.Start_Date
	}
	return ""
}

func (x *Package) GetStart_Time() string {
	if x != nil {
		return x.Start_Time
	}
	return ""
}

func (x *Package) GetEnd_Date() string {
	if x != nil {
		return x.End_Date
	}
	return ""
}

func (x *Package) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Package) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Package) GetDestination_Count() int64 {
	if x != nil {
		return x.Destination_Count
	}
	return 0
}

func (x *Package) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Package) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Package) GetMax_Capacity() int64 {
	if x != nil {
		return x.Max_Capacity
	}
	return 0
}

func (x *Package) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *Package) GetCategory() *Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Package) GetDestinations() []*Destination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category_ID   int64  `protobuf:"varint,1,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Category_Name string `protobuf:"bytes,2,opt,name=Category_Name,json=CategoryName,proto3" json:"Category_Name,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{31}
}

func (x *Category) GetCategory_ID() int64 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *Category) GetCategory_Name() string {
	if x != nil {
		return x.Category_Name
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coordinator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{32}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_coordinator_proto protoreflect.FileDescriptor

var file_coordinator_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xe2, 0x02, 0x0a, 0x15, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x5f, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x05,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xa1,
	0x01, 0x0a, 0x09, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x36, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x09, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xfa, 0x02, 0x0a, 0x07, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x5f, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x50, 0x61, 0x69, 0x64, 0x5f, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x50, 0x61, 0x69,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xd1, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x4d, 0x69, 0x6e,
	0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x5f, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x42, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x46, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x61, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x44, 0x22, 0x4b, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06,
	0x52, 0x65, 0x66, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65,
	0x66, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x54, 0x79, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x79, 0x70, 0x22, 0xe1,
	0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x52,
	0x65, 0x66, 0x5f, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x65, 0x66,
	0x49, 0x44, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x22, 0xbf, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x10, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x25,
	0x0a, 0x0e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x72, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x45, 0x6e, 0x64, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x5f,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x3b, 0x0a, 0x10, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x06,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x4f, 0x54, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x64,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x40,
	0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x4e, 0x65, 0x77, 0x5f, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x3e, 0x0a, 0x14, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x54, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x42, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x42, 0x0a, 0x0e, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x9a, 0x02, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x12, 0x23, 0x0a,
	0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x09,
	0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x46, 0x6f, 0x6f,
	0x64, 0x5f, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x46, 0x6f, 0x6f, 0x64,
	0x4d, 0x65, 0x6e, 0x75, 0x22, 0xab, 0x01, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x20, 0x0a, 0x0c, 0x46, 0x6f, 0x6f, 0x64, 0x5f, 0x4d, 0x65, 0x6e, 0x75, 0x5f, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x66, 0x61, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4c, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x22, 0xfc, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x29, 0x0a, 0x10, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x5f, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x5f, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x08,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x5f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xd9, 0x04, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x0c,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x43, 0x6f, 0x6f, 0x72, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6f, 0x72, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x4d, 0x61,
	0x78, 0x5f, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x50, 0x0a,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0d, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x25, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xb1, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x18, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x17,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x1e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x17, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x16,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a,
	0x1a, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x17, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x19, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x1f, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x16, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x11,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x61, 0x6b, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0e, 0x56, 0x69,
	0x65, 0x77, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x14,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0b, 0x56, 0x69, 0x65, 0x77, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0b,
	0x56, 0x69, 0x65, 0x77, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x27, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x56,
	0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0d,
	0x56, 0x69, 0x65, 0x77, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x1a, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x39, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x1a, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coordinator_proto_rawDescOnce sync.Once
	file_coordinator_proto_rawDescData = file_coordinator_proto_rawDesc
)

func file_coordinator_proto_rawDescGZIP() []byte {
	file_coordinator_proto_rawDescOnce.Do(func() {
		file_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(file_coordinator_proto_rawDescData)
	})
	return file_coordinator_proto_rawDescData
}

var file_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_coordinator_proto_goTypes = []interface{}{
	(*BookingSearchCriteria)(nil),   // 0: pb.BookingSearchCriteria
	(*Users)(nil),                   // 1: pb.Users
	(*User)(nil),                    // 2: pb.User
	(*Dashboard)(nil),               // 3: pb.Dashboard
	(*Histories)(nil),               // 4: pb.Histories
	(*History)(nil),                 // 5: pb.History
	(*PaymentConfirmedRequest)(nil), // 6: pb.PaymentConfirmedRequest
	(*Filter)(nil),                  // 7: pb.Filter
	(*OnlinePaymentResponse)(nil),   // 8: pb.OnlinePaymentResponse
	(*BookingResponse)(nil),         // 9: pb.BookingResponse
	(*Booking)(nil),                 // 10: pb.Booking
	(*TravellerResponse)(nil),       // 11: pb.TravellerResponse
	(*TravellerDetails)(nil),        // 12: pb.TravellerDetails
	(*TravellerRequest)(nil),        // 13: pb.TravellerRequest
	(*Search)(nil),                  // 14: pb.Search
	(*Categories)(nil),              // 15: pb.Categories
	(*PackagesResponse)(nil),        // 16: pb.PackagesResponse
	(*Verify)(nil),                  // 17: pb.Verify
	(*Response)(nil),                // 18: pb.Response
	(*Signup)(nil),                  // 19: pb.Signup
	(*NewPassword)(nil),             // 20: pb.NewPassword
	(*ForgetPasswordVerify)(nil),    // 21: pb.ForgetPasswordVerify
	(*ForgetPassword)(nil),          // 22: pb.ForgetPassword
	(*View)(nil),                    // 23: pb.View
	(*Login)(nil),                   // 24: pb.Login
	(*SignupResponse)(nil),          // 25: pb.SignupResponse
	(*Activity)(nil),                // 26: pb.Activity
	(*FoodMenus)(nil),               // 27: pb.FoodMenus
	(*FoodMenu)(nil),                // 28: pb.FoodMenu
	(*Destination)(nil),             // 29: pb.Destination
	(*Package)(nil),                 // 30: pb.Package
	(*Category)(nil),                // 31: pb.Category
	(*LoginResponse)(nil),           // 32: pb.LoginResponse
}
var file_coordinator_proto_depIdxs = []int32{
	2,  // 0: pb.Users.Users:type_name -> pb.User
	5,  // 1: pb.Histories.Histories:type_name -> pb.History
	12, // 2: pb.History.Travellers:type_name -> pb.TravellerDetails
	26, // 3: pb.TravellerDetails.Activity:type_name -> pb.Activity
	12, // 4: pb.TravellerRequest.Traveller_Details:type_name -> pb.TravellerDetails
	31, // 5: pb.Categories.Categories:type_name -> pb.Category
	30, // 6: pb.PackagesResponse.Packages:type_name -> pb.Package
	28, // 7: pb.FoodMenus.Food_Menu:type_name -> pb.FoodMenu
	26, // 8: pb.Destination.Activity:type_name -> pb.Activity
	31, // 9: pb.Package.Category:type_name -> pb.Category
	29, // 10: pb.Package.Destinations:type_name -> pb.Destination
	19, // 11: pb.Coordinator.CoordinatorSignupRequest:input_type -> pb.Signup
	23, // 12: pb.Coordinator.CoordinatorViewPackages:input_type -> pb.View
	17, // 13: pb.Coordinator.CoordinatorSignupVerifyRequest:input_type -> pb.Verify
	24, // 14: pb.Coordinator.CoordinatorLoginRequest:input_type -> pb.Login
	30, // 15: pb.Coordinator.CoordinatorAddPackage:input_type -> pb.Package
	28, // 16: pb.Coordinator.CoordinatorAddFoodMenu:input_type -> pb.FoodMenu
	23, // 17: pb.Coordinator.CoordinatorViewFoodMenu:input_type -> pb.View
	29, // 18: pb.Coordinator.CoordinatorAddDestination:input_type -> pb.Destination
	26, // 19: pb.Coordinator.CoordinatorAddActivity:input_type -> pb.Activity
	23, // 20: pb.Coordinator.CoordinatorViewPackage:input_type -> pb.View
	23, // 21: pb.Coordinator.CoordinatorViewDestination:input_type -> pb.View
	23, // 22: pb.Coordinator.CoordinatorViewActivity:input_type -> pb.View
	22, // 23: pb.Coordinator.CoordinatorForgetPassword:input_type -> pb.ForgetPassword
	21, // 24: pb.Coordinator.CoordinatorForgetPasswordVerify:input_type -> pb.ForgetPasswordVerify
	20, // 25: pb.Coordinator.CoordinatorNewPassword:input_type -> pb.NewPassword
	23, // 26: pb.Coordinator.AvailablePackages:input_type -> pb.View
	31, // 27: pb.Coordinator.AddCategory:input_type -> pb.Category
	23, // 28: pb.Coordinator.AdminPacakgeStatus:input_type -> pb.View
	23, // 29: pb.Coordinator.Viewcategories:input_type -> pb.View
	14, // 30: pb.Coordinator.PackageSearch:input_type -> pb.Search
	7,  // 31: pb.Coordinator.FilterPackage:input_type -> pb.Filter
	13, // 32: pb.Coordinator.UserTravellerDetails:input_type -> pb.TravellerRequest
	10, // 33: pb.Coordinator.OfflineBooking:input_type -> pb.Booking
	10, // 34: pb.Coordinator.OnlinePayment:input_type -> pb.Booking
	6,  // 35: pb.Coordinator.PaymentConfirmed:input_type -> pb.PaymentConfirmedRequest
	23, // 36: pb.Coordinator.ViewHistory:input_type -> pb.View
	23, // 37: pb.Coordinator.ViewBooking:input_type -> pb.View
	23, // 38: pb.Coordinator.CancelBooking:input_type -> pb.View
	23, // 39: pb.Coordinator.ViewTraveller:input_type -> pb.View
	23, // 40: pb.Coordinator.ViewDashboard:input_type -> pb.View
	23, // 41: pb.Coordinator.ViewCoordinators:input_type -> pb.View
	0,  // 42: pb.Coordinator.SearchBooking:input_type -> pb.BookingSearchCriteria
	18, // 43: pb.Coordinator.CoordinatorSignupRequest:output_type -> pb.Response
	16, // 44: pb.Coordinator.CoordinatorViewPackages:output_type -> pb.PackagesResponse
	18, // 45: pb.Coordinator.CoordinatorSignupVerifyRequest:output_type -> pb.Response
	32, // 46: pb.Coordinator.CoordinatorLoginRequest:output_type -> pb.LoginResponse
	18, // 47: pb.Coordinator.CoordinatorAddPackage:output_type -> pb.Response
	18, // 48: pb.Coordinator.CoordinatorAddFoodMenu:output_type -> pb.Response
	27, // 49: pb.Coordinator.CoordinatorViewFoodMenu:output_type -> pb.FoodMenus
	18, // 50: pb.Coordinator.CoordinatorAddDestination:output_type -> pb.Response
	18, // 51: pb.Coordinator.CoordinatorAddActivity:output_type -> pb.Response
	30, // 52: pb.Coordinator.CoordinatorViewPackage:output_type -> pb.Package
	29, // 53: pb.Coordinator.CoordinatorViewDestination:output_type -> pb.Destination
	26, // 54: pb.Coordinator.CoordinatorViewActivity:output_type -> pb.Activity
	18, // 55: pb.Coordinator.CoordinatorForgetPassword:output_type -> pb.Response
	18, // 56: pb.Coordinator.CoordinatorForgetPasswordVerify:output_type -> pb.Response
	18, // 57: pb.Coordinator.CoordinatorNewPassword:output_type -> pb.Response
	16, // 58: pb.Coordinator.AvailablePackages:output_type -> pb.PackagesResponse
	18, // 59: pb.Coordinator.AddCategory:output_type -> pb.Response
	18, // 60: pb.Coordinator.AdminPacakgeStatus:output_type -> pb.Response
	15, // 61: pb.Coordinator.Viewcategories:output_type -> pb.Categories
	16, // 62: pb.Coordinator.PackageSearch:output_type -> pb.PackagesResponse
	16, // 63: pb.Coordinator.FilterPackage:output_type -> pb.PackagesResponse
	11, // 64: pb.Coordinator.UserTravellerDetails:output_type -> pb.TravellerResponse
	9,  // 65: pb.Coordinator.OfflineBooking:output_type -> pb.BookingResponse
	8,  // 66: pb.Coordinator.OnlinePayment:output_type -> pb.OnlinePaymentResponse
	9,  // 67: pb.Coordinator.PaymentConfirmed:output_type -> pb.BookingResponse
	4,  // 68: pb.Coordinator.ViewHistory:output_type -> pb.Histories
	5,  // 69: pb.Coordinator.ViewBooking:output_type -> pb.History
	18, // 70: pb.Coordinator.CancelBooking:output_type -> pb.Response
	12, // 71: pb.Coordinator.ViewTraveller:output_type -> pb.TravellerDetails
	3,  // 72: pb.Coordinator.ViewDashboard:output_type -> pb.Dashboard
	1,  // 73: pb.Coordinator.ViewCoordinators:output_type -> pb.Users
	4,  // 74: pb.Coordinator.SearchBooking:output_type -> pb.Histories
	43, // [43:75] is the sub-list for method output_type
	11, // [11:43] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_coordinator_proto_init() }
func file_coordinator_proto_init() {
	if File_coordinator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coordinator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingSearchCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dashboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Histories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentConfirmedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Booking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TravellerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TravellerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TravellerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Search); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Categories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PackagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Login); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodMenus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Destination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coordinator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coordinator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coordinator_proto_goTypes,
		DependencyIndexes: file_coordinator_proto_depIdxs,
		MessageInfos:      file_coordinator_proto_msgTypes,
	}.Build()
	File_coordinator_proto = out.File
	file_coordinator_proto_rawDesc = nil
	file_coordinator_proto_goTypes = nil
	file_coordinator_proto_depIdxs = nil
}
